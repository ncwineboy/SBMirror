@using SBMirror.Logic
@using SBMirror.Models.Weather
@using SBMirror.Services
@inject AmbientWeatherService ambient
@inject NationalWeatherService nws
@rendermode InteractiveServer


<table width="100%">
	<tr>
		<td valign="middle" align="right">
			@if (sunriseSunset.Calculated)
			{
				<img src="images/sunrise-48.png" />

				@sunriseSunset.Sunrise.ToShortTimeString()
			}
			else
			{
				<p>Calculating...</p>
			}
		</td>
		<td valign="middle" align="right">
			@if (sunriseSunset.Calculated)
			{
				<img src="images/sunset-48.png" />

				@sunriseSunset.Sunset.ToShortTimeString()
			}
			else
			{
				<p>Calculating...</p>
			}
		</td>
		<td valign="middle" align="right">
			@if (moonPhase == null)
			{
				<p>Calculating...</p>
			}
			else
			{
				<img src="@moonPhase" />
			}
		</td>
	</tr>

	@if (current.dateutc != 0)
	{
		<tr>
			<td valign="middle" align="right">
				<img src="images/wind-48.png" />@current.windgustmph <sup>@current.Direction</sup>
			</td>
			<td valign="middle" align="right">
				<img src="images/hygrometer-48.png" /> @current.humidity%
			</td>
			<td valign="middle" align="right">
				<img src="images/rain-gauge-48.png" /> @current.dailyrainin
			</td>
		</tr>
		<tr>
			<td valign="middle" align="right">
				@if (forecast.currentConditions != "N/A")
				{
					<img src="@forecast.currentConditions" />
				}
			</td>
			<td colspan="2" align="right">
				<h1 class="display-1">@current.tempf&deg;F</h1>
			</td>
		</tr>
		<tr>
			<td colspan="3" align="right">
				<h4>Feels like @current.feelsLike&deg;F</h4>
			</td>
		</tr>
	}
	else
	{
		<tr>
			<td colspan="3">Loading...</td>
		</tr>
	}
</table>
<hr />
@if (forecast.forecast.Count > 0)
{
	<table width="100%">
		@foreach (var day in forecast.forecast)
		{
			<tr>
				<td valign="middle" align="right">@day.day</td>
				<td valign="middle" align="right">
					@if (day.icon != null)
					{
						<img src="@day.icon.Replace("medium", "small")" width="48" />
					}	
					</td>
				<td valign="middle" align="right"><font color="#FF0000">@day.high&deg;F</font></td>
				<td valign="middle" align="right"><font color="#00FFFF">@day.low&deg;F</font></td>
			</tr>
		}
	</table>
}


@code {
	private Lastdata current = new Lastdata();
	private SunriseSunset sunriseSunset = new SunriseSunset();
	private string? moonPhase = null;
	private WeatherForecast forecast = new WeatherForecast();

	protected override async Task OnInitializedAsync()
	{
		current = await ambient.ReadWeatherStationData("24:D7:EB:CF:2D:48", "c023fe6784564f48b85cdc3c09e9065545b24483988348cdab4ed003294f6eaa", "04df461c6e074ce3928465ae6799b9c1c60d9dbe68b44c60bf5502ef5973d248");
		forecast = await nws.GenerateWeatherForecast();
		sunriseSunset = SunriseSunsetCalculator.SunriseSunSetCalc(35.6538498, -81.3666442);
		moonPhase = MoonPhase.GetMoonPhaseImage(MoonPhase.MoonPhaseCalculator(DateTime.Now));
		ambient.LastdataChanged += HandleChange;
		nws.ForecastChanged += ForecastChange;
	}

	private void HandleChange(Lastdata newCurrent)
	{
		if (newCurrent.dateutc > 0)
		{
			current = newCurrent;
			InvokeAsync(StateHasChanged);
		}
	}

	private void ForecastChange(WeatherForecast weatherForecast)
	{
		forecast = weatherForecast;
		InvokeAsync(StateHasChanged);
	}
}

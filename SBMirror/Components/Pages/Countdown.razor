@using SBMirror.Services
@using SBMirror.Models
@inject CountdownService countdown
@rendermode InteractiveServer

<table width="100%" height="100%">
	<tr>
		<td valign="top">
			<table width="100%" cellspacing="5" cellpadding="5">
				@foreach (var item in countdowns)
				{
					<tr>
						<td align="right">@item.Name</td>
						<td align="left">@item.TimeUntil.Days days, @string.Format("{0:00}:{1:00}:{2:00}", @item.TimeUntil.Hours, @item.TimeUntil.Minutes, @item.TimeUntil.Seconds)</td>
					</tr>
				}
			</table>
		</td>
	</tr>
</table>

@code {
	List<SBMirror.Models.Countdown> countdowns = new List<SBMirror.Models.Countdown>();

	protected override async Task OnInitializedAsync()
	{
		countdowns = await countdown.GetCurrentCountdowns();
		countdown.CountdownsChanged += HandleChange;
	}

	private void HandleChange(List<SBMirror.Models.Countdown> newList)
	{
		countdowns = newList;
		InvokeAsync(StateHasChanged);
	}
}
